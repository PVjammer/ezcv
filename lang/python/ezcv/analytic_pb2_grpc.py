# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from vidstreamer import analytic_pb2 as vidstreamer_dot_analytic__pb2


class AnalyticStub(object):
  """Analytic service defines the functions for processing video frames via
  streaming or non-streaming (unary) RPC
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamVideoFrame = channel.stream_stream(
        '/ace.Analytic/StreamVideoFrame',
        request_serializer=vidstreamer_dot_analytic__pb2.InputFrame.SerializeToString,
        response_deserializer=vidstreamer_dot_analytic__pb2.CompositeFrame.FromString,
        )
    self.ProcessVideoFrame = channel.unary_unary(
        '/ace.Analytic/ProcessVideoFrame',
        request_serializer=vidstreamer_dot_analytic__pb2.InputFrame.SerializeToString,
        response_deserializer=vidstreamer_dot_analytic__pb2.CompositeFrame.FromString,
        )
    self.FanoutFrame = channel.unary_unary(
        '/ace.Analytic/FanoutFrame',
        request_serializer=vidstreamer_dot_analytic__pb2.InputFrame.SerializeToString,
        response_deserializer=vidstreamer_dot_analytic__pb2.Empty.FromString,
        )
    self.GetFrame = channel.unary_unary(
        '/ace.Analytic/GetFrame',
        request_serializer=vidstreamer_dot_analytic__pb2.FrameRequest.SerializeToString,
        response_deserializer=vidstreamer_dot_analytic__pb2.CompositeResults.FromString,
        )
    self.CheckStatus = channel.unary_unary(
        '/ace.Analytic/CheckStatus',
        request_serializer=vidstreamer_dot_analytic__pb2.Empty.SerializeToString,
        response_deserializer=vidstreamer_dot_analytic__pb2.AnalyticStatus.FromString,
        )


class AnalyticServicer(object):
  """Analytic service defines the functions for processing video frames via
  streaming or non-streaming (unary) RPC
  """

  def StreamVideoFrame(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProcessVideoFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FanoutFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalyticServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamVideoFrame': grpc.stream_stream_rpc_method_handler(
          servicer.StreamVideoFrame,
          request_deserializer=vidstreamer_dot_analytic__pb2.InputFrame.FromString,
          response_serializer=vidstreamer_dot_analytic__pb2.CompositeFrame.SerializeToString,
      ),
      'ProcessVideoFrame': grpc.unary_unary_rpc_method_handler(
          servicer.ProcessVideoFrame,
          request_deserializer=vidstreamer_dot_analytic__pb2.InputFrame.FromString,
          response_serializer=vidstreamer_dot_analytic__pb2.CompositeFrame.SerializeToString,
      ),
      'FanoutFrame': grpc.unary_unary_rpc_method_handler(
          servicer.FanoutFrame,
          request_deserializer=vidstreamer_dot_analytic__pb2.InputFrame.FromString,
          response_serializer=vidstreamer_dot_analytic__pb2.Empty.SerializeToString,
      ),
      'GetFrame': grpc.unary_unary_rpc_method_handler(
          servicer.GetFrame,
          request_deserializer=vidstreamer_dot_analytic__pb2.FrameRequest.FromString,
          response_serializer=vidstreamer_dot_analytic__pb2.CompositeResults.SerializeToString,
      ),
      'CheckStatus': grpc.unary_unary_rpc_method_handler(
          servicer.CheckStatus,
          request_deserializer=vidstreamer_dot_analytic__pb2.Empty.FromString,
          response_serializer=vidstreamer_dot_analytic__pb2.AnalyticStatus.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ace.Analytic', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
